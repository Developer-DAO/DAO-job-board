/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/': {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  '/gig_applications': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.gig_applications.id'];
          gig_id?: parameters['rowFilter.gig_applications.gig_id'];
          pitch?: parameters['rowFilter.gig_applications.pitch'];
          content?: parameters['rowFilter.gig_applications.content'];
          status?: parameters['rowFilter.gig_applications.status'];
          created_at?: parameters['rowFilter.gig_applications.created_at'];
          updated_at?: parameters['rowFilter.gig_applications.updated_at'];
          deleted_at?: parameters['rowFilter.gig_applications.deleted_at'];
          /** References to a wallet address from users table */
          created_by?: parameters['rowFilter.gig_applications.created_by'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['gig_applications'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** gig_applications */
          gig_applications?: definitions['gig_applications'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.gig_applications.id'];
          gig_id?: parameters['rowFilter.gig_applications.gig_id'];
          pitch?: parameters['rowFilter.gig_applications.pitch'];
          content?: parameters['rowFilter.gig_applications.content'];
          status?: parameters['rowFilter.gig_applications.status'];
          created_at?: parameters['rowFilter.gig_applications.created_at'];
          updated_at?: parameters['rowFilter.gig_applications.updated_at'];
          deleted_at?: parameters['rowFilter.gig_applications.deleted_at'];
          /** References to a wallet address from users table */
          created_by?: parameters['rowFilter.gig_applications.created_by'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.gig_applications.id'];
          gig_id?: parameters['rowFilter.gig_applications.gig_id'];
          pitch?: parameters['rowFilter.gig_applications.pitch'];
          content?: parameters['rowFilter.gig_applications.content'];
          status?: parameters['rowFilter.gig_applications.status'];
          created_at?: parameters['rowFilter.gig_applications.created_at'];
          updated_at?: parameters['rowFilter.gig_applications.updated_at'];
          deleted_at?: parameters['rowFilter.gig_applications.deleted_at'];
          /** References to a wallet address from users table */
          created_by?: parameters['rowFilter.gig_applications.created_by'];
        };
        body: {
          /** gig_applications */
          gig_applications?: definitions['gig_applications'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/gig_keyword': {
    get: {
      parameters: {
        query: {
          gig_id?: parameters['rowFilter.gig_keyword.gig_id'];
          keyword_id?: parameters['rowFilter.gig_keyword.keyword_id'];
          created_at?: parameters['rowFilter.gig_keyword.created_at'];
          updated_at?: parameters['rowFilter.gig_keyword.updated_at'];
          deleted_at?: parameters['rowFilter.gig_keyword.deleted_at'];
          created_by?: parameters['rowFilter.gig_keyword.created_by'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['gig_keyword'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** gig_keyword */
          gig_keyword?: definitions['gig_keyword'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          gig_id?: parameters['rowFilter.gig_keyword.gig_id'];
          keyword_id?: parameters['rowFilter.gig_keyword.keyword_id'];
          created_at?: parameters['rowFilter.gig_keyword.created_at'];
          updated_at?: parameters['rowFilter.gig_keyword.updated_at'];
          deleted_at?: parameters['rowFilter.gig_keyword.deleted_at'];
          created_by?: parameters['rowFilter.gig_keyword.created_by'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          gig_id?: parameters['rowFilter.gig_keyword.gig_id'];
          keyword_id?: parameters['rowFilter.gig_keyword.keyword_id'];
          created_at?: parameters['rowFilter.gig_keyword.created_at'];
          updated_at?: parameters['rowFilter.gig_keyword.updated_at'];
          deleted_at?: parameters['rowFilter.gig_keyword.deleted_at'];
          created_by?: parameters['rowFilter.gig_keyword.created_by'];
        };
        body: {
          /** gig_keyword */
          gig_keyword?: definitions['gig_keyword'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/gigs': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.gigs.id'];
          organization_id?: parameters['rowFilter.gigs.organization_id'];
          title?: parameters['rowFilter.gigs.title'];
          description?: parameters['rowFilter.gigs.description'];
          position?: parameters['rowFilter.gigs.position'];
          featured_photo_url?: parameters['rowFilter.gigs.featured_photo_url'];
          experience_level?: parameters['rowFilter.gigs.experience_level'];
          status?: parameters['rowFilter.gigs.status'];
          created_at?: parameters['rowFilter.gigs.created_at'];
          updated_at?: parameters['rowFilter.gigs.updated_at'];
          deleted_at?: parameters['rowFilter.gigs.deleted_at'];
          /** References to a wallet address from users table */
          created_by?: parameters['rowFilter.gigs.created_by'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['gigs'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** gigs */
          gigs?: definitions['gigs'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.gigs.id'];
          organization_id?: parameters['rowFilter.gigs.organization_id'];
          title?: parameters['rowFilter.gigs.title'];
          description?: parameters['rowFilter.gigs.description'];
          position?: parameters['rowFilter.gigs.position'];
          featured_photo_url?: parameters['rowFilter.gigs.featured_photo_url'];
          experience_level?: parameters['rowFilter.gigs.experience_level'];
          status?: parameters['rowFilter.gigs.status'];
          created_at?: parameters['rowFilter.gigs.created_at'];
          updated_at?: parameters['rowFilter.gigs.updated_at'];
          deleted_at?: parameters['rowFilter.gigs.deleted_at'];
          /** References to a wallet address from users table */
          created_by?: parameters['rowFilter.gigs.created_by'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.gigs.id'];
          organization_id?: parameters['rowFilter.gigs.organization_id'];
          title?: parameters['rowFilter.gigs.title'];
          description?: parameters['rowFilter.gigs.description'];
          position?: parameters['rowFilter.gigs.position'];
          featured_photo_url?: parameters['rowFilter.gigs.featured_photo_url'];
          experience_level?: parameters['rowFilter.gigs.experience_level'];
          status?: parameters['rowFilter.gigs.status'];
          created_at?: parameters['rowFilter.gigs.created_at'];
          updated_at?: parameters['rowFilter.gigs.updated_at'];
          deleted_at?: parameters['rowFilter.gigs.deleted_at'];
          /** References to a wallet address from users table */
          created_by?: parameters['rowFilter.gigs.created_by'];
        };
        body: {
          /** gigs */
          gigs?: definitions['gigs'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/job_applications': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.job_applications.id'];
          job_id?: parameters['rowFilter.job_applications.job_id'];
          pitch?: parameters['rowFilter.job_applications.pitch'];
          content?: parameters['rowFilter.job_applications.content'];
          status?: parameters['rowFilter.job_applications.status'];
          created_at?: parameters['rowFilter.job_applications.created_at'];
          updated_at?: parameters['rowFilter.job_applications.updated_at'];
          deleted_at?: parameters['rowFilter.job_applications.deleted_at'];
          /** References to a wallet address from users table */
          created_by?: parameters['rowFilter.job_applications.created_by'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['job_applications'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** job_applications */
          job_applications?: definitions['job_applications'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.job_applications.id'];
          job_id?: parameters['rowFilter.job_applications.job_id'];
          pitch?: parameters['rowFilter.job_applications.pitch'];
          content?: parameters['rowFilter.job_applications.content'];
          status?: parameters['rowFilter.job_applications.status'];
          created_at?: parameters['rowFilter.job_applications.created_at'];
          updated_at?: parameters['rowFilter.job_applications.updated_at'];
          deleted_at?: parameters['rowFilter.job_applications.deleted_at'];
          /** References to a wallet address from users table */
          created_by?: parameters['rowFilter.job_applications.created_by'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.job_applications.id'];
          job_id?: parameters['rowFilter.job_applications.job_id'];
          pitch?: parameters['rowFilter.job_applications.pitch'];
          content?: parameters['rowFilter.job_applications.content'];
          status?: parameters['rowFilter.job_applications.status'];
          created_at?: parameters['rowFilter.job_applications.created_at'];
          updated_at?: parameters['rowFilter.job_applications.updated_at'];
          deleted_at?: parameters['rowFilter.job_applications.deleted_at'];
          /** References to a wallet address from users table */
          created_by?: parameters['rowFilter.job_applications.created_by'];
        };
        body: {
          /** job_applications */
          job_applications?: definitions['job_applications'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/job_keyword': {
    get: {
      parameters: {
        query: {
          job_id?: parameters['rowFilter.job_keyword.job_id'];
          keyword_id?: parameters['rowFilter.job_keyword.keyword_id'];
          created_at?: parameters['rowFilter.job_keyword.created_at'];
          updated_at?: parameters['rowFilter.job_keyword.updated_at'];
          deleted_at?: parameters['rowFilter.job_keyword.deleted_at'];
          created_by?: parameters['rowFilter.job_keyword.created_by'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['job_keyword'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** job_keyword */
          job_keyword?: definitions['job_keyword'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          job_id?: parameters['rowFilter.job_keyword.job_id'];
          keyword_id?: parameters['rowFilter.job_keyword.keyword_id'];
          created_at?: parameters['rowFilter.job_keyword.created_at'];
          updated_at?: parameters['rowFilter.job_keyword.updated_at'];
          deleted_at?: parameters['rowFilter.job_keyword.deleted_at'];
          created_by?: parameters['rowFilter.job_keyword.created_by'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          job_id?: parameters['rowFilter.job_keyword.job_id'];
          keyword_id?: parameters['rowFilter.job_keyword.keyword_id'];
          created_at?: parameters['rowFilter.job_keyword.created_at'];
          updated_at?: parameters['rowFilter.job_keyword.updated_at'];
          deleted_at?: parameters['rowFilter.job_keyword.deleted_at'];
          created_by?: parameters['rowFilter.job_keyword.created_by'];
        };
        body: {
          /** job_keyword */
          job_keyword?: definitions['job_keyword'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/jobs': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.jobs.id'];
          organization_id?: parameters['rowFilter.jobs.organization_id'];
          title?: parameters['rowFilter.jobs.title'];
          description?: parameters['rowFilter.jobs.description'];
          position?: parameters['rowFilter.jobs.position'];
          opportunity?: parameters['rowFilter.jobs.opportunity'];
          featured_photo_url?: parameters['rowFilter.jobs.featured_photo_url'];
          status?: parameters['rowFilter.jobs.status'];
          created_at?: parameters['rowFilter.jobs.created_at'];
          updated_at?: parameters['rowFilter.jobs.updated_at'];
          deleted_at?: parameters['rowFilter.jobs.deleted_at'];
          /** References to a wallet address from users table */
          created_by?: parameters['rowFilter.jobs.created_by'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['jobs'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** jobs */
          jobs?: definitions['jobs'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.jobs.id'];
          organization_id?: parameters['rowFilter.jobs.organization_id'];
          title?: parameters['rowFilter.jobs.title'];
          description?: parameters['rowFilter.jobs.description'];
          position?: parameters['rowFilter.jobs.position'];
          opportunity?: parameters['rowFilter.jobs.opportunity'];
          featured_photo_url?: parameters['rowFilter.jobs.featured_photo_url'];
          status?: parameters['rowFilter.jobs.status'];
          created_at?: parameters['rowFilter.jobs.created_at'];
          updated_at?: parameters['rowFilter.jobs.updated_at'];
          deleted_at?: parameters['rowFilter.jobs.deleted_at'];
          /** References to a wallet address from users table */
          created_by?: parameters['rowFilter.jobs.created_by'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.jobs.id'];
          organization_id?: parameters['rowFilter.jobs.organization_id'];
          title?: parameters['rowFilter.jobs.title'];
          description?: parameters['rowFilter.jobs.description'];
          position?: parameters['rowFilter.jobs.position'];
          opportunity?: parameters['rowFilter.jobs.opportunity'];
          featured_photo_url?: parameters['rowFilter.jobs.featured_photo_url'];
          status?: parameters['rowFilter.jobs.status'];
          created_at?: parameters['rowFilter.jobs.created_at'];
          updated_at?: parameters['rowFilter.jobs.updated_at'];
          deleted_at?: parameters['rowFilter.jobs.deleted_at'];
          /** References to a wallet address from users table */
          created_by?: parameters['rowFilter.jobs.created_by'];
        };
        body: {
          /** jobs */
          jobs?: definitions['jobs'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/keywords': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.keywords.id'];
          name?: parameters['rowFilter.keywords.name'];
          created_at?: parameters['rowFilter.keywords.created_at'];
          updated_at?: parameters['rowFilter.keywords.updated_at'];
          deleted_at?: parameters['rowFilter.keywords.deleted_at'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['keywords'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** keywords */
          keywords?: definitions['keywords'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.keywords.id'];
          name?: parameters['rowFilter.keywords.name'];
          created_at?: parameters['rowFilter.keywords.created_at'];
          updated_at?: parameters['rowFilter.keywords.updated_at'];
          deleted_at?: parameters['rowFilter.keywords.deleted_at'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.keywords.id'];
          name?: parameters['rowFilter.keywords.name'];
          created_at?: parameters['rowFilter.keywords.created_at'];
          updated_at?: parameters['rowFilter.keywords.updated_at'];
          deleted_at?: parameters['rowFilter.keywords.deleted_at'];
        };
        body: {
          /** keywords */
          keywords?: definitions['keywords'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/links': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.links.id'];
          linkable_id?: parameters['rowFilter.links.linkable_id'];
          linkable_type?: parameters['rowFilter.links.linkable_type'];
          title?: parameters['rowFilter.links.title'];
          type?: parameters['rowFilter.links.type'];
          url?: parameters['rowFilter.links.url'];
          featured_photo_url?: parameters['rowFilter.links.featured_photo_url'];
          created_at?: parameters['rowFilter.links.created_at'];
          updated_at?: parameters['rowFilter.links.updated_at'];
          deleted_at?: parameters['rowFilter.links.deleted_at'];
          /** References to a wallet address from users table */
          created_by?: parameters['rowFilter.links.created_by'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['links'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** links */
          links?: definitions['links'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.links.id'];
          linkable_id?: parameters['rowFilter.links.linkable_id'];
          linkable_type?: parameters['rowFilter.links.linkable_type'];
          title?: parameters['rowFilter.links.title'];
          type?: parameters['rowFilter.links.type'];
          url?: parameters['rowFilter.links.url'];
          featured_photo_url?: parameters['rowFilter.links.featured_photo_url'];
          created_at?: parameters['rowFilter.links.created_at'];
          updated_at?: parameters['rowFilter.links.updated_at'];
          deleted_at?: parameters['rowFilter.links.deleted_at'];
          /** References to a wallet address from users table */
          created_by?: parameters['rowFilter.links.created_by'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.links.id'];
          linkable_id?: parameters['rowFilter.links.linkable_id'];
          linkable_type?: parameters['rowFilter.links.linkable_type'];
          title?: parameters['rowFilter.links.title'];
          type?: parameters['rowFilter.links.type'];
          url?: parameters['rowFilter.links.url'];
          featured_photo_url?: parameters['rowFilter.links.featured_photo_url'];
          created_at?: parameters['rowFilter.links.created_at'];
          updated_at?: parameters['rowFilter.links.updated_at'];
          deleted_at?: parameters['rowFilter.links.deleted_at'];
          /** References to a wallet address from users table */
          created_by?: parameters['rowFilter.links.created_by'];
        };
        body: {
          /** links */
          links?: definitions['links'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/organization_members': {
    get: {
      parameters: {
        query: {
          organization_id?: parameters['rowFilter.organization_members.organization_id'];
          user_id?: parameters['rowFilter.organization_members.user_id'];
          created_at?: parameters['rowFilter.organization_members.created_at'];
          updated_at?: parameters['rowFilter.organization_members.updated_at'];
          deleted_at?: parameters['rowFilter.organization_members.deleted_at'];
          created_by?: parameters['rowFilter.organization_members.created_by'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['organization_members'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** organization_members */
          organization_members?: definitions['organization_members'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          organization_id?: parameters['rowFilter.organization_members.organization_id'];
          user_id?: parameters['rowFilter.organization_members.user_id'];
          created_at?: parameters['rowFilter.organization_members.created_at'];
          updated_at?: parameters['rowFilter.organization_members.updated_at'];
          deleted_at?: parameters['rowFilter.organization_members.deleted_at'];
          created_by?: parameters['rowFilter.organization_members.created_by'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          organization_id?: parameters['rowFilter.organization_members.organization_id'];
          user_id?: parameters['rowFilter.organization_members.user_id'];
          created_at?: parameters['rowFilter.organization_members.created_at'];
          updated_at?: parameters['rowFilter.organization_members.updated_at'];
          deleted_at?: parameters['rowFilter.organization_members.deleted_at'];
          created_by?: parameters['rowFilter.organization_members.created_by'];
        };
        body: {
          /** organization_members */
          organization_members?: definitions['organization_members'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/organizations': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.organizations.id'];
          name?: parameters['rowFilter.organizations.name'];
          email?: parameters['rowFilter.organizations.email'];
          description?: parameters['rowFilter.organizations.description'];
          logo_url?: parameters['rowFilter.organizations.logo_url'];
          cover_photo_url?: parameters['rowFilter.organizations.cover_photo_url'];
          created_at?: parameters['rowFilter.organizations.created_at'];
          updated_at?: parameters['rowFilter.organizations.updated_at'];
          deleted_at?: parameters['rowFilter.organizations.deleted_at'];
          /** References to a wallet address from users table */
          created_by?: parameters['rowFilter.organizations.created_by'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['organizations'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** organizations */
          organizations?: definitions['organizations'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.organizations.id'];
          name?: parameters['rowFilter.organizations.name'];
          email?: parameters['rowFilter.organizations.email'];
          description?: parameters['rowFilter.organizations.description'];
          logo_url?: parameters['rowFilter.organizations.logo_url'];
          cover_photo_url?: parameters['rowFilter.organizations.cover_photo_url'];
          created_at?: parameters['rowFilter.organizations.created_at'];
          updated_at?: parameters['rowFilter.organizations.updated_at'];
          deleted_at?: parameters['rowFilter.organizations.deleted_at'];
          /** References to a wallet address from users table */
          created_by?: parameters['rowFilter.organizations.created_by'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.organizations.id'];
          name?: parameters['rowFilter.organizations.name'];
          email?: parameters['rowFilter.organizations.email'];
          description?: parameters['rowFilter.organizations.description'];
          logo_url?: parameters['rowFilter.organizations.logo_url'];
          cover_photo_url?: parameters['rowFilter.organizations.cover_photo_url'];
          created_at?: parameters['rowFilter.organizations.created_at'];
          updated_at?: parameters['rowFilter.organizations.updated_at'];
          deleted_at?: parameters['rowFilter.organizations.deleted_at'];
          /** References to a wallet address from users table */
          created_by?: parameters['rowFilter.organizations.created_by'];
        };
        body: {
          /** organizations */
          organizations?: definitions['organizations'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/user_keyword': {
    get: {
      parameters: {
        query: {
          user_id?: parameters['rowFilter.user_keyword.user_id'];
          keyword_id?: parameters['rowFilter.user_keyword.keyword_id'];
          created_at?: parameters['rowFilter.user_keyword.created_at'];
          updated_at?: parameters['rowFilter.user_keyword.updated_at'];
          deleted_at?: parameters['rowFilter.user_keyword.deleted_at'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['user_keyword'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** user_keyword */
          user_keyword?: definitions['user_keyword'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          user_id?: parameters['rowFilter.user_keyword.user_id'];
          keyword_id?: parameters['rowFilter.user_keyword.keyword_id'];
          created_at?: parameters['rowFilter.user_keyword.created_at'];
          updated_at?: parameters['rowFilter.user_keyword.updated_at'];
          deleted_at?: parameters['rowFilter.user_keyword.deleted_at'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          user_id?: parameters['rowFilter.user_keyword.user_id'];
          keyword_id?: parameters['rowFilter.user_keyword.keyword_id'];
          created_at?: parameters['rowFilter.user_keyword.created_at'];
          updated_at?: parameters['rowFilter.user_keyword.updated_at'];
          deleted_at?: parameters['rowFilter.user_keyword.deleted_at'];
        };
        body: {
          /** user_keyword */
          user_keyword?: definitions['user_keyword'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/users': {
    get: {
      parameters: {
        query: {
          /** References to a wallet address */
          id?: parameters['rowFilter.users.id'];
          nonce?: parameters['rowFilter.users.nonce'];
          avatar_url?: parameters['rowFilter.users.avatar_url'];
          username?: parameters['rowFilter.users.username'];
          preferences?: parameters['rowFilter.users.preferences'];
          disabled_at?: parameters['rowFilter.users.disabled_at'];
          created_at?: parameters['rowFilter.users.created_at'];
          updated_at?: parameters['rowFilter.users.updated_at'];
          deleted_at?: parameters['rowFilter.users.deleted_at'];
          name?: parameters['rowFilter.users.name'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['users'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** users */
          users?: definitions['users'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          /** References to a wallet address */
          id?: parameters['rowFilter.users.id'];
          nonce?: parameters['rowFilter.users.nonce'];
          avatar_url?: parameters['rowFilter.users.avatar_url'];
          username?: parameters['rowFilter.users.username'];
          preferences?: parameters['rowFilter.users.preferences'];
          disabled_at?: parameters['rowFilter.users.disabled_at'];
          created_at?: parameters['rowFilter.users.created_at'];
          updated_at?: parameters['rowFilter.users.updated_at'];
          deleted_at?: parameters['rowFilter.users.deleted_at'];
          name?: parameters['rowFilter.users.name'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          /** References to a wallet address */
          id?: parameters['rowFilter.users.id'];
          nonce?: parameters['rowFilter.users.nonce'];
          avatar_url?: parameters['rowFilter.users.avatar_url'];
          username?: parameters['rowFilter.users.username'];
          preferences?: parameters['rowFilter.users.preferences'];
          disabled_at?: parameters['rowFilter.users.disabled_at'];
          created_at?: parameters['rowFilter.users.created_at'];
          updated_at?: parameters['rowFilter.users.updated_at'];
          deleted_at?: parameters['rowFilter.users.deleted_at'];
          name?: parameters['rowFilter.users.name'];
        };
        body: {
          /** users */
          users?: definitions['users'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  gig_applications: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Note:
     * This is a Foreign Key to `gigs.id`.<fk table='gigs' column='id'/>
     */
    gig_id: string;
    pitch?: string;
    content?: string;
    status?: string;
    created_at: string;
    updated_at: string;
    deleted_at?: string;
    /**
     * References to a wallet address from users table
     *
     * Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    created_by: string;
  };
  gig_keyword: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `gigs.id`.<fk table='gigs' column='id'/>
     */
    gig_id: string;
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `keywords.id`.<fk table='keywords' column='id'/>
     */
    keyword_id: string;
    created_at: string;
    updated_at: string;
    deleted_at?: string;
    /**
     * Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    created_by: string;
  };
  gigs: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Note:
     * This is a Foreign Key to `organizations.id`.<fk table='organizations' column='id'/>
     */
    organization_id: string;
    title: string;
    description: string;
    position?: string;
    featured_photo_url?: string;
    experience_level?: string;
    status?: string;
    created_at: string;
    updated_at: string;
    deleted_at?: string;
    /**
     * References to a wallet address from users table
     *
     * Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    created_by: string;
  };
  job_applications: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Note:
     * This is a Foreign Key to `jobs.id`.<fk table='jobs' column='id'/>
     */
    job_id: string;
    pitch?: string;
    content?: string;
    status?: string;
    created_at: string;
    updated_at: string;
    deleted_at?: string;
    /**
     * References to a wallet address from users table
     *
     * Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    created_by: string;
  };
  job_keyword: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `jobs.id`.<fk table='jobs' column='id'/>
     */
    job_id: string;
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `keywords.id`.<fk table='keywords' column='id'/>
     */
    keyword_id: string;
    created_at: string;
    updated_at: string;
    deleted_at?: string;
    /**
     * Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    created_by: string;
  };
  jobs: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Note:
     * This is a Foreign Key to `organizations.id`.<fk table='organizations' column='id'/>
     */
    organization_id: string;
    title: string;
    description: string;
    position?: string;
    opportunity?: string;
    featured_photo_url?: string;
    status?: string;
    created_at: string;
    updated_at: string;
    deleted_at?: string;
    /**
     * References to a wallet address from users table
     *
     * Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    created_by: string;
  };
  keywords: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    name: string;
    created_at: string;
    updated_at: string;
    deleted_at?: string;
  };
  links: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    linkable_id: string;
    linkable_type: string;
    title?: string;
    type?: string;
    url?: string;
    featured_photo_url?: string;
    created_at: string;
    updated_at: string;
    deleted_at?: string;
    /**
     * References to a wallet address from users table
     *
     * Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    created_by: string;
  };
  organization_members: {
    /**
     * Note:
     * This is a Foreign Key to `organizations.id`.<fk table='organizations' column='id'/>
     */
    organization_id: string;
    /**
     * Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    user_id: string;
    created_at: string;
    updated_at: string;
    deleted_at?: string;
    /**
     * Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    created_by: string;
  };
  /** Can be a DAO, company or a small team of developers */
  organizations: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    name: string;
    email: string;
    description: string;
    logo_url?: string;
    cover_photo_url?: string;
    created_at: string;
    updated_at: string;
    deleted_at?: string;
    /**
     * References to a wallet address from users table
     *
     * Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    created_by: string;
  };
  user_keyword: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    user_id: string;
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `keywords.id`.<fk table='keywords' column='id'/>
     */
    keyword_id: string;
    created_at: string;
    updated_at: string;
    deleted_at?: string;
  };
  users: {
    /**
     * References to a wallet address
     *
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    nonce?: string;
    avatar_url?: string;
    username?: string;
    preferences?: string;
    disabled_at?: string;
    created_at: string;
    updated_at: string;
    deleted_at?: string;
    name?: string;
  };
}

export interface parameters {
  /** Preference */
  preferParams: 'params=single-object';
  /** Preference */
  preferReturn: 'return=representation' | 'return=minimal' | 'return=none';
  /** Preference */
  preferCount: 'count=none';
  /** Filtering Columns */
  select: string;
  /** On Conflict */
  on_conflict: string;
  /** Ordering */
  order: string;
  /** Limiting and Pagination */
  range: string;
  /** Limiting and Pagination */
  rangeUnit: string;
  /** Limiting and Pagination */
  offset: string;
  /** Limiting and Pagination */
  limit: string;
  /** gig_applications */
  'body.gig_applications': definitions['gig_applications'];
  'rowFilter.gig_applications.id': string;
  'rowFilter.gig_applications.gig_id': string;
  'rowFilter.gig_applications.pitch': string;
  'rowFilter.gig_applications.content': string;
  'rowFilter.gig_applications.status': string;
  'rowFilter.gig_applications.created_at': string;
  'rowFilter.gig_applications.updated_at': string;
  'rowFilter.gig_applications.deleted_at': string;
  /** References to a wallet address from users table */
  'rowFilter.gig_applications.created_by': string;
  /** gig_keyword */
  'body.gig_keyword': definitions['gig_keyword'];
  'rowFilter.gig_keyword.gig_id': string;
  'rowFilter.gig_keyword.keyword_id': string;
  'rowFilter.gig_keyword.created_at': string;
  'rowFilter.gig_keyword.updated_at': string;
  'rowFilter.gig_keyword.deleted_at': string;
  'rowFilter.gig_keyword.created_by': string;
  /** gigs */
  'body.gigs': definitions['gigs'];
  'rowFilter.gigs.id': string;
  'rowFilter.gigs.organization_id': string;
  'rowFilter.gigs.title': string;
  'rowFilter.gigs.description': string;
  'rowFilter.gigs.position': string;
  'rowFilter.gigs.featured_photo_url': string;
  'rowFilter.gigs.experience_level': string;
  'rowFilter.gigs.status': string;
  'rowFilter.gigs.created_at': string;
  'rowFilter.gigs.updated_at': string;
  'rowFilter.gigs.deleted_at': string;
  /** References to a wallet address from users table */
  'rowFilter.gigs.created_by': string;
  /** job_applications */
  'body.job_applications': definitions['job_applications'];
  'rowFilter.job_applications.id': string;
  'rowFilter.job_applications.job_id': string;
  'rowFilter.job_applications.pitch': string;
  'rowFilter.job_applications.content': string;
  'rowFilter.job_applications.status': string;
  'rowFilter.job_applications.created_at': string;
  'rowFilter.job_applications.updated_at': string;
  'rowFilter.job_applications.deleted_at': string;
  /** References to a wallet address from users table */
  'rowFilter.job_applications.created_by': string;
  /** job_keyword */
  'body.job_keyword': definitions['job_keyword'];
  'rowFilter.job_keyword.job_id': string;
  'rowFilter.job_keyword.keyword_id': string;
  'rowFilter.job_keyword.created_at': string;
  'rowFilter.job_keyword.updated_at': string;
  'rowFilter.job_keyword.deleted_at': string;
  'rowFilter.job_keyword.created_by': string;
  /** jobs */
  'body.jobs': definitions['jobs'];
  'rowFilter.jobs.id': string;
  'rowFilter.jobs.organization_id': string;
  'rowFilter.jobs.title': string;
  'rowFilter.jobs.description': string;
  'rowFilter.jobs.position': string;
  'rowFilter.jobs.opportunity': string;
  'rowFilter.jobs.featured_photo_url': string;
  'rowFilter.jobs.status': string;
  'rowFilter.jobs.created_at': string;
  'rowFilter.jobs.updated_at': string;
  'rowFilter.jobs.deleted_at': string;
  /** References to a wallet address from users table */
  'rowFilter.jobs.created_by': string;
  /** keywords */
  'body.keywords': definitions['keywords'];
  'rowFilter.keywords.id': string;
  'rowFilter.keywords.name': string;
  'rowFilter.keywords.created_at': string;
  'rowFilter.keywords.updated_at': string;
  'rowFilter.keywords.deleted_at': string;
  /** links */
  'body.links': definitions['links'];
  'rowFilter.links.id': string;
  'rowFilter.links.linkable_id': string;
  'rowFilter.links.linkable_type': string;
  'rowFilter.links.title': string;
  'rowFilter.links.type': string;
  'rowFilter.links.url': string;
  'rowFilter.links.featured_photo_url': string;
  'rowFilter.links.created_at': string;
  'rowFilter.links.updated_at': string;
  'rowFilter.links.deleted_at': string;
  /** References to a wallet address from users table */
  'rowFilter.links.created_by': string;
  /** organization_members */
  'body.organization_members': definitions['organization_members'];
  'rowFilter.organization_members.organization_id': string;
  'rowFilter.organization_members.user_id': string;
  'rowFilter.organization_members.created_at': string;
  'rowFilter.organization_members.updated_at': string;
  'rowFilter.organization_members.deleted_at': string;
  'rowFilter.organization_members.created_by': string;
  /** organizations */
  'body.organizations': definitions['organizations'];
  'rowFilter.organizations.id': string;
  'rowFilter.organizations.name': string;
  'rowFilter.organizations.email': string;
  'rowFilter.organizations.description': string;
  'rowFilter.organizations.logo_url': string;
  'rowFilter.organizations.cover_photo_url': string;
  'rowFilter.organizations.created_at': string;
  'rowFilter.organizations.updated_at': string;
  'rowFilter.organizations.deleted_at': string;
  /** References to a wallet address from users table */
  'rowFilter.organizations.created_by': string;
  /** user_keyword */
  'body.user_keyword': definitions['user_keyword'];
  'rowFilter.user_keyword.user_id': string;
  'rowFilter.user_keyword.keyword_id': string;
  'rowFilter.user_keyword.created_at': string;
  'rowFilter.user_keyword.updated_at': string;
  'rowFilter.user_keyword.deleted_at': string;
  /** users */
  'body.users': definitions['users'];
  /** References to a wallet address */
  'rowFilter.users.id': string;
  'rowFilter.users.nonce': string;
  'rowFilter.users.avatar_url': string;
  'rowFilter.users.username': string;
  'rowFilter.users.preferences': string;
  'rowFilter.users.disabled_at': string;
  'rowFilter.users.created_at': string;
  'rowFilter.users.updated_at': string;
  'rowFilter.users.deleted_at': string;
  'rowFilter.users.name': string;
}

export interface operations {}

export interface external {}
